#!/bin/bash

set -e  # stop on error
set -u  # ensure variables are defined

# global parameters, may be overwritten by environment
: ${FLESNETDIR:=/usr/bin/}
: ${FLESCTLDIR:=/opt/fles/bin/}
: ${SPMDIR:=/opt/spm/}
: ${RUNDIR:=}
: ${LOGDIR:=log/}
: ${FLESNET_CFG:=${RUNDIR}flesnet.cfg}
: ${SPM_CFG:=${RUNDIR}readout.spm}

# command line parameters
if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <config> <run_id>"
  exit 1
fi

# default configuration
TSBUF_DATA_SIZE_EXP=27
TSBUF_DESC_SIZE_EXP=19

CONFIG_FILE="$1"
source "$CONFIG_FILE"
RUN_ID="$2"

###############################################################

# read node list into bash array
declare -a EN_LIST
declare -a PN_LIST
EN_LIST=(`scontrol show hostname "$INPUT"`)
PN_LIST=(`scontrol show hostname "$OUTPUT"`)

echo -n "Generating configs for "
echo -n "${EN_LIST[*]} "
echo "${PN_LIST[*]}"

echo "Writing output to $FLESNET_CFG and $SPM_CFG"

# entry nodes
declare -a EN_CFG
declare -a EN_INDEX
declare -a EN_SPM
declare CRI_SPM
input=0

SHM_PREFIX=cri_
for node in ${EN_LIST[@]}; do
    hostconfig $node
    for cri in ${!ADDR[*]}; do
        shm_channel=0
        for ((channel=0; channel<8; channel++)); do
            i=$((cri*8+channel))
            if [ ${LINK[$i]} != disable ]; then
                EN_CFG+=("input = shm://$HOSTADDR/$SHM_PREFIX$cri/$shm_channel?overlap=$OVERLAP_SIZE")
                EN_INDEX+=(-i$input)
                ((shm_channel += 1))
                ((input += 1))
            fi
        done
        EN_CFG+=("")
        CRI_SPM="${CRI_SPM:+${CRI_SPM},}cri_${node}_${ADDR[$cri]:0:2}"
    done
    EN_SPM+=("$node: bash -c \"LOGDIR=${LOGDIR}${node}_ ${FLESCTLDIR}/fles_input $CONFIG_FILE $node\"")
    EN_SPM+=("$node: bash -c \"${SPMDIR}spm-require -n1 fles_input_sem; ${FLESNETDIR}flesnet -m -f $FLESNET_CFG -L ${LOGDIR}${node}_flesnet_en.log --log-syslog ${EN_INDEX[*]}\"")
    unset EN_INDEX
done


# processing nodes
SHM_PREFIX=flesnet_`date +%S%N`_
declare -a PN_CFG
declare -a PN_SPM
output=0
for node in ${PN_LIST[@]}; do
    hostconfig $node
    TSCLIENT_COUNT=${#TSCLIENT_PARAM[@]}
    PN_CFG+=("output = shm://$HOSTADDR/$SHM_PREFIX$output?datasize=${TSBUF_DATA_SIZE_EXP}&descsize=${TSBUF_DESC_SIZE_EXP}")
    PN_SPM+=("$node: bash -c '${FLESNETDIR}preclean; ${FLESNETDIR}flesnet -m -f $FLESNET_CFG -L ${LOGDIR}${node}_flesnet_pn.log --log-syslog -o$output'")
    client=0
    for PARAM in "${TSCLIENT_PARAM[@]}"; do
        PARAM=${PARAM//%run_id%/$RUN_ID}
        PARAM=${PARAM//%client%/$client}
        PARAM=${PARAM//%shm_id%/$SHM_PREFIX$output}
        PN_SPM+=("$node: ${FLESNETDIR}tsclient -c$output -L ${LOGDIR}${node}_${client}_tsclient.log --log-syslog ${PARAM}")
        ((client += 1))
    done
    for CMD in "${EXTRA_CMD[@]}"; do
        CMD=${CMD//%run_id%/$RUN_ID}
        CMD=${CMD//%shm_id%/$SHM_PREFIX$output}
        PN_SPM+=("$node: ${CMD}")
    done
    ((output += 1))
done


# global config
declare -a GLOBAL_CFG
GLOBAL_CFG+=("transport = $TRANSPORT")
GLOBAL_CFG+=("timeslice-size = $TIMESLICE_SIZE")
GLOBAL_CFG+=("processor-executable = /bin/true")


# generate output
echo -e "# Flesnet configuration autogenerated from $CONFIG_FILE at `date`" > $FLESNET_CFG

echo -e "\n# Global configuration" >> $FLESNET_CFG
for i in ${!GLOBAL_CFG[*]}; do
   echo ${GLOBAL_CFG[$i]} >> $FLESNET_CFG
done

echo -e "\n# Entry nodes" >> $FLESNET_CFG
for i in ${!EN_CFG[*]}; do
   echo ${EN_CFG[$i]} >> $FLESNET_CFG
done

echo -e "# Processing nodes" >> $FLESNET_CFG
for i in ${!PN_CFG[*]}; do
   echo ${PN_CFG[$i]} >> $FLESNET_CFG
done

echo -e "# SPM configuration autogenerated from $CONFIG_FILE at `date`" > $SPM_CFG

if [ -n "$CRI_SPM" ]; then
  echo -e "\n# CRIs" >> $SPM_CFG
  # TODO: for now we don't want licences
  #echo "#SPM-RUN --licenses=$CRI_SPM" >> $SPM_CFG
fi

echo -e "\n# Entry nodes" >> $SPM_CFG
for i in ${!EN_SPM[*]}; do
   echo ${EN_SPM[$i]} >> $SPM_CFG
done

echo -e "\n# Processing nodes" >> $SPM_CFG
for i in ${!PN_SPM[*]}; do
   echo ${PN_SPM[$i]} >> $SPM_CFG
done

