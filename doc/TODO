# 2016-03-11 - jc flesnet repository

DONE - cleanup local git working copy
DONE - accept dirks modified pull request
DONE - tag master as cbmnet_1.0 (ask dirk)
DONE - support time instead of microslice index
DONE   - check for code using microslice index - should be display only
DONE - reduce number of COPY operations for StorableMicroslice
DONE - maybe rename Base,Derived to Input,Output in Filter code
DONE - integrate fles_ipc
DONE - set up travis ci
DONE - merge to master
DONE - adapt xcode project
DONE - mstool should not poll excessively
DONE - support eof in shm buffers
WONTFIX - mstool should handle ctrl-c (do not terminate!)

- drop legacy code

- check for missing code for soft_dpb
- example soft_dpb

- new dev branch for next big things
- maybe refactor: DualRingbuffer -> IndexedBuffer
- next big thing: support arbitrary start index
  - new parameter: start_index
- next big thing: peek shm, synchronize start
- next big thing: controls online interface

------

MicrosliceDescriptor.hpp:

struct DataDescriptor {
    virtual uint32_t get_size() = 0;
    virtual uint64_t get_offset() = 0;
};
// -> use policy classes / static polymorphism!

struct MicrosliceDescriptor : DataDescriptor {
    virtual uint32_t get_size() override { return size; }
    virtual uint64_t get_offset() override { return offset; }

------

template <typename Metadata>
class DataDescriptor : public Metadata {
public:
    uint32_t get_size() {
		  return Metadata::size;
		}
    uint64_t get_offset() {
		  return Metadata::offset;
		}
};

typedef DataDescriptor<MicrosliceDescriptor> Descriptor;

# 2015-09-09 - jc fles_ipc repository

towards soft-dpb!
- microslice filter

extensive tests

tsclient:
- count ts with errors

rework datasource interface

use logging

app/tsclient/main.cpp


# Previously...

flesnet:

- exception safety, error handling
- sensible thread exception handling
- forked processes: kill on error
- allow storage plus checker
- on cbmdaq: IN does not retry, fails if CN not ready -> hacky sleep
- use ibv_fork_init?

./run: processed-messages missing if instances>1?

directly serialize char*?

 - http://stackoverflow.com/questions/5094750/boost-c-serializing-a-char?rq=1
additional boost ser stuff (version, macros)?
 - http://www.boost.org/doc/libs/1_33_1/libs/serialization/doc/special.html
 - http://www.boost.org/doc/libs/1_37_0/libs/serialization/doc/special.html#multi_threading
 - http://www.boost.org/doc/libs/1_45_0/libs/serialization/doc/traits.html#export
 - http://stackoverflow.com/questions/3386991/c-boost-serialization-serializing-templated-derived-classes?rq=1
 - http://stackoverflow.com/questions/6734814/boostserialization-reconstruction-loading
